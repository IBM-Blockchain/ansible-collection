#
# SPDX-License-Identifier: Apache-2.0
#
---
trigger:
  branches:
    include:
      - "*"
    exclude:
      - gh-pages
  tags:
    include:
      - "*"
pool:
  vmImage: "ubuntu-latest"
steps:
  - script: sudo apt-get update && sudo apt-get install -y shellcheck
    displayName: Install Ubuntu dependencies
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.x"
    displayName: Use Python 3.x
  - script: pip install ansible ansible-doc-extractor ansible-lint flake8 fabric-sdk-py openshift python-pkcs11 sphinx sphinx-rtd-theme yamllint yq
    displayName: Install Python dependencies
  - script: curl -sSL https://github.com/hyperledger/fabric/releases/download/v1.4.7/hyperledger-fabric-linux-amd64-1.4.7.tar.gz | sudo tar xzf - -C /usr/local
    displayName: Install Fabric CLI
  - script: |
      set -ex
      curl -sL https://ibm.biz/idt-installer | bash
      ibmcloud config --check-version=false
      ibmcloud version
      ibmcloud plugin list
      curl -sSL https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.3/linux/oc.tar.gz | sudo tar xzf - -C /usr/local/bin
    displayName: Install IBM Cloud and OpenShift CLI
  - script: |
      set -ex
      ibmcloud login --apikey $(IBM Cloud API Key) -c $(IBM Cloud Account) -r $(IBM Cloud Region)
      ibmcloud oc cluster config -c $(IBM Cloud OpenShift Cluster ID)
      oc login -u apikey -p $(IBM Cloud API Key)
    displayName: Log in to IBM Cloud
  - script: ansible-galaxy collection build
    displayName: Build collection artifact
  - script: |
      set -ex
      cd docs
      make
    displayName: Build documentation
  - script: |
      set -ex
      VERSION=$(yq -r .version galaxy.yml)
      ansible-galaxy collection install ibm-blockchain_platform-${VERSION}.tar.gz
    displayName: Install collection
  - script: |
      set -ex
      flake8 .
      ansible-lint .
      for ROLE in roles/*; do ansible-lint ${ROLE}; done
      for PLAYBOOK in tutorial/??-*.yml; do ansible-lint ${PLAYBOOK}; done
      shellcheck tutorial/*.sh
      yamllint .
    displayName: Lint collection
  - script: |
      set -ex
      cd ~/.ansible/collections/ansible_collections/ibm/blockchain_platform
      export TEST_RUN_ID=$(dd if=/dev/urandom bs=4096 count=1 2>/dev/null | shasum | awk '{print $1}')
      export SHORT_TEST_RUN_ID=$(echo ${TEST_RUN_ID} | awk '{print substr($1,1,8)}')
      yq -yi '.api_endpoint="$(IBM Blockchain Platform API Endpoint)"' tests/integration/integration_config.yml
      yq -yi '.api_authtype="$(IBM Blockchain Platform API Auth Type)"' tests/integration/integration_config.yml
      yq -yi '.api_key="$(IBM Blockchain Platform API Key)"' tests/integration/integration_config.yml
      yq -yi '.api_secret="$(IBM Blockchain Platform API Secret)"' tests/integration/integration_config.yml
      yq -yi '.k8s_namespace="$(IBM Blockchain Platform K8S Namespace)"' tests/integration/integration_config.yml
      yq -yi .test_run_id=\"${TEST_RUN_ID}\" tests/integration/integration_config.yml
      yq -yi .short_test_run_id=\"${SHORT_TEST_RUN_ID}\" tests/integration/integration_config.yml
      ansible-test integration
    displayName: Run tests
  - script: |
      set -ex
      VERSION=$(yq -r .version galaxy.yml)
      ansible-galaxy collection publish --api-key $(Ansible Galaxy API Key) ibm-blockchain_platform-${VERSION}.tar.gz
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
    displayName: Publish collection to Ansible Galaxy
  - script: |
      set -ex
      git config --global user.name $(GitHub User Name)
      git config --global user.email $(GitHub User Email)
      git clone -b gh-pages $(Build.Repository.Uri) /tmp/gh-pages
      pushd /tmp/gh-pages
      git rm -rf . || true
      popd
      pushd docs/build
      tar cf - . | (cd /tmp/gh-pages; tar xvf -)
      popd
      pushd /tmp/gh-pages
      git add .
      git commit -s -m "Automatic documentation build"
      git -c http.extraheader="Authorization: Basic $(GitHub Basic Auth)" push $(Build.Repository.Uri) HEAD:gh-pages -f
      popd
    displayName: Publish documentation to GitHub Pages
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
