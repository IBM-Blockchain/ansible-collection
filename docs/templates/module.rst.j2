..
.. SPDX-License-Identifier: Apache-2.0
..

:github_url: https://github.com/IBM-Blockchain/ansible-collection/edit/master/plugins/modules/{{ module }}.py

{% if short_description %}
{%   set title = module + ' -- ' + short_description | rst_ify %}
{% else %}
{%   set title = module %}
{% endif %}

{{ title }}
{{ '=' * title|length }}

.. contents::
   :local:
   :depth: 1


{% if description -%}
Synopsis
--------

{%   for desc in description %}
{{ desc | rst_ify }}

{%   endfor %}
{% endif %}


{% if requirements -%}
Requirements
------------
The below requirements are needed on the host that executes this module.

{%   for req in requirements %}
- {{ req | rst_ify }}
{%   endfor %}
{% endif %}


{% macro option_desc(opts, level) %}
{%   for name, spec in opts.items() %}
  {{ "  " * level }}{{ name }}{{ ' (required)' if spec.required }}
{%     for para in spec.description %}
    {{ "  " * level }}{{ para | rst_ify }}

{%     endfor %}
{% if spec.type %}
    {{ "  " * level }}| **Type**: {{ spec.type }}
{% endif %}
{% if spec.type == 'list' and spec.elements %}
    {{ "  " * level }}| **Elements**: {{ spec.elements }}
{% endif %}
{% if spec.default %}
    {{ "  " * level }}| **Default value**: ``{{ spec.default }}``
{% endif %}

{%     if spec.suboptions %}
{{ option_desc(spec.suboptions, level + 1) }}
{%     endif %}
{%   endfor %}
{% endmacro %}

{% if options -%}
Parameters
----------

{{ option_desc(options, 0) }}
{% endif %}


{% if notes -%}
Notes
-----

.. note::
{%   for note in notes %}
   - {{ note | rst_ify }}
{%   endfor %}
{% endif %}


{% if seealso -%}
See Also
--------

.. seealso::

{% for item in seealso %}
{%   if item.module is defined and item.description is defined %}
   :ref:`{{ item.module }}_module`
       {{ item.description | rst_ify }}
{%   elif item.module is defined %}
   :ref:`{{ item.module }}_module`
      The official documentation on the **{{ item.module }}** module.
{%   elif item.name is defined and item.link is defined and item.description is defined %}
   `{{ item.name }} <{{ item.link }}>`_
       {{ item.description | rst_ify }}
{%   elif item.ref is defined and item.description is defined %}
   :ref:`{{ item.ref }}`
       {{ item.description | rst_ify }}
{%   endif %}
{% endfor %}
{% endif %}


{% if examples -%}
Examples
--------

.. code-block:: yaml+jinja

{{ examples | indent(4, True) }}
{% endif %}

{% macro result_desc(results, level) %}
{%   for name, spec in results.items() %}
  {{ "  " * level }}{{ name }}
{%     for para in spec.description %}
    {{ "  " * level }}{{ para | rst_ify }}

{%     endfor %}
{% if spec.returned %}
    {{ "  " * level }}| **Returned**: {{ spec.returned | rst_ify }}
{% endif %}
{% if spec.type %}
    {{ "  " * level }}| **Type**: {{ spec.type }}
{% endif %}
{% if spec.type == 'list' and spec.elements %}
    {{ "  " * level }}| **Elements**: {{ spec.elements }}
{% endif %}
{% if spec.sample %}
    {{ "  " * level }}| **Sample**: ``{{ spec.sample }}``
{% endif %}

{%     if spec.contains %}
{{ result_desc(spec.contains, level + 1) }}
{%     endif %}
{%   endfor %}
{% endmacro %}

{% if returndocs -%}
Return Values
-------------

{{ result_desc(returndocs, 0) }}
{% endif %}