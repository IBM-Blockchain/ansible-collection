#
# SPDX-License-Identifier: Apache-2.0
#
---
- name: Fail if namespace not specified
  fail:
    msg: namespace not specified
  when: not namespace is defined

- name: Determine if namespace exists
  k8s_info:
    api_version: v1
    kind: Namespace
    name: "{{ namespace }}"
  register: namespace_info

- name: Delete console
  k8s:
    state: absent
    namespace: "{{ namespace }}"
    api_version: ibp.com/v1alpha1
    kind: IBPConsole
    name: "{{ console }}"
  when: namespace_info.resources

- name: Delete operator
  k8s:
    state: absent
    namespace: "{{ namespace }}"
    api_version: apps/v1
    kind: Deployment
    name: "{{ operator }}"
    wait: yes
    wait_timeout: "{{ wait_timeout }}"
  when: namespace_info.resources

- name: Delete image secret
  k8s:
    state: absent
    namespace: "{{ namespace }}"
    api_version: v1
    kind: Secret
    name: "{{ image_pull_secret }}"
  when: namespace_info.resources

- name: Delete role binding
  k8s:
    state: absent
    namespace: "{{ namespace }}"
    api_version: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    name: "{{ role_binding }}"
  when: namespace_info.resources

- name: Delete cluster role binding
  k8s:
    state: absent
    namespace: "{{ namespace }}"
    api_version: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    name: "{{ cluster_role_binding }}"
  when: namespace_info.resources

- name: Delete cluster role
  k8s:
    state: absent
    namespace: "{{ namespace }}"
    api_version: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    name: "{{ cluster_role }}"
  when: namespace_info.resources

- name: Delete pod security policy
  k8s:
    state: absent
    namespace: "{{ namespace }}"
    api_version: policy/v1beta1
    kind: PodSecurityPolicy
    name: "{{ pod_security_policy }}"
  when: namespace_info.resources
