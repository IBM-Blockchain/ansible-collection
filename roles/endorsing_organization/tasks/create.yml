#
# SPDX-License-Identifier: Apache-2.0
#
---
- name: Create certificate authority
  ibm.blockchain_platform.certificate_authority:
    state: "{{ state }}"
    api_endpoint: "{{ api_endpoint }}"
    api_authtype: "{{ api_authtype }}"
    api_key: "{{ api_key }}"
    api_secret: "{{ api_secret | default(omit) }}"
    api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
    name: "{{ ca_name }}"
    config_override:
      ca:
        registry:
          maxenrollments: -1
          identities:
            - name: "{{ ca_admin_enrollment_id }}"
              pass: "{{ ca_admin_enrollment_secret }}"
              type: client
              maxenrollments: -1
              attrs:
                hf.Registrar.Roles: "*"
                hf.Registrar.DelegateRoles: "*"
                hf.Revoker: true
                hf.IntermediateCA: true
                hf.GenCRL: true
                hf.Registrar.Attributes: "*"
                hf.AffiliationMgr: true
    resources: "{{ ca_resources | default(omit) }}"
    storage: "{{ ca_storage | default(omit) }}"
    wait_timeout: "{{ wait_timeout | default(omit) }}"

- name: Enroll certificate authority admin
  ibm.blockchain_platform.enrolled_identity:
    state: "{{ state }}"
    api_endpoint: "{{ api_endpoint }}"
    api_authtype: "{{ api_authtype }}"
    api_key: "{{ api_key }}"
    api_secret: "{{ api_secret | default(omit) }}"
    api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
    certificate_authority: "{{ ca_name }}"
    name: "{{ ca_name }} Admin"
    enrollment_id: "{{ ca_admin_enrollment_id }}"
    enrollment_secret: "{{ ca_admin_enrollment_secret }}"
    path: "{{ playbook_dir }}/{{ ca_name }} Admin.json"

- name: Register the organization admin
  ibm.blockchain_platform.registered_identity:
    state: "{{ state }}"
    api_endpoint: "{{ api_endpoint }}"
    api_authtype: "{{ api_authtype }}"
    api_key: "{{ api_key }}"
    api_secret: "{{ api_secret | default(omit) }}"
    api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
    certificate_authority: "{{ ca_name }}"
    registrar: "{{ playbook_dir }}/{{ ca_name }} Admin.json"
    enrollment_id: "{{ organization_admin_enrollment_id }}"
    enrollment_secret: "{{ organization_admin_enrollment_secret }}"
    max_enrollments: -1
    type: admin

- name: Register the peer
  ibm.blockchain_platform.registered_identity:
    state: "{{ state }}"
    api_endpoint: "{{ api_endpoint }}"
    api_authtype: "{{ api_authtype }}"
    api_key: "{{ api_key }}"
    api_secret: "{{ api_secret | default(omit) }}"
    api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
    certificate_authority: "{{ ca_name }}"
    registrar: "{{ playbook_dir }}/{{ ca_name }} Admin.json"
    enrollment_id: "{{ peer_enrollment_id }}"
    enrollment_secret: "{{ peer_enrollment_secret }}"
    max_enrollments: -1
    type: peer

- name: Enroll the organization admin
  ibm.blockchain_platform.enrolled_identity:
    state: "{{ state }}"
    api_endpoint: "{{ api_endpoint }}"
    api_authtype: "{{ api_authtype }}"
    api_key: "{{ api_key }}"
    api_secret: "{{ api_secret | default(omit) }}"
    api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
    certificate_authority: "{{ ca_name }}"
    name: "{{ organization_name }} Admin"
    enrollment_id: "{{ organization_admin_enrollment_id }}"
    enrollment_secret: "{{ organization_admin_enrollment_secret }}"
    path: "{{ playbook_dir }}/{{ organization_name }} Admin.json"
  register: org_admin

- name: Create organization
  ibm.blockchain_platform.organization:
    state: "{{ state }}"
    api_endpoint: "{{ api_endpoint }}"
    api_authtype: "{{ api_authtype }}"
    api_key: "{{ api_key }}"
    api_secret: "{{ api_secret | default(omit) }}"
    api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
    name: "{{ organization_name }}"
    msp_id: "{{ organization_msp_id }}"
    certificate_authority: "{{ ca_name }}"
    registrar: "{{ playbook_dir }}/{{ ca_name }} Admin.json"
    admins:
      - "{{ org_admin.enrolled_identity.cert | default(omit) }}"

- name: Create peer
  ibm.blockchain_platform.peer:
    state: "{{ state }}"
    api_endpoint: "{{ api_endpoint }}"
    api_authtype: "{{ api_authtype }}"
    api_key: "{{ api_key }}"
    api_secret: "{{ api_secret | default(omit) }}"
    api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
    name: "{{ peer_name }}"
    msp_id: "{{ organization_msp_id }}"
    state_db: "{{ peer_state_db }}"
    certificate_authority: "{{ ca_name }}"
    enrollment_id: "{{ peer_enrollment_id }}"
    enrollment_secret: "{{ peer_enrollment_secret }}"
    admin_certificates:
      - "{{ org_admin.enrolled_identity.cert | default(omit) }}"
    resources: "{{ peer_resources | default(omit) }}"
    storage: "{{ peer_storage | default(omit) }}"
    wait_timeout: "{{ wait_timeout | default(omit) }}"
  when: peers == 1

- name: Create multiple peers
  ibm.blockchain_platform.peer:
    state: "{{ state }}"
    api_endpoint: "{{ api_endpoint }}"
    api_authtype: "{{ api_authtype }}"
    api_key: "{{ api_key }}"
    api_secret: "{{ api_secret | default(omit) }}"
    api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
    name: "{{ peer_name }}{{ item }}"
    msp_id: "{{ organization_msp_id }}"
    state_db: "{{ peer_state_db }}"
    certificate_authority: "{{ ca_name }}"
    enrollment_id: "{{ peer_enrollment_id }}"
    enrollment_secret: "{{ peer_enrollment_secret }}"
    admin_certificates:
      - "{{ org_admin.enrolled_identity.cert | default(omit) }}"
    resources: "{{ peer_resources | default(omit) }}"
    storage: "{{ peer_storage | default(omit) }}"
    wait_timeout: "{{ wait_timeout | default(omit) }}"
  loop: "{{ range(1, peers + 1, 1) | list }}"
  when: peers > 1
